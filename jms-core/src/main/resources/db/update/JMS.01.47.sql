CREATE TABLE AUDIT_STATUS (
    AUDIT_STATUS_ID INT NOT NULL,
    NAME varchar(100) NOT NULL,
    DESCRIPTION varchar(255) NULL,
    CREATED_BY numeric(11,0),
    CREATED_DATE datetime NOT NULL DEFAULT getDate(),
    UPDATED_BY numeric(11,0),
    UPDATED_DATE datetime,
    LOCK_VERSION numeric(11, 0) NOT NULL DEFAULT 0,
    CONSTRAINT AUDIT_STATUS_PK PRIMARY KEY CLUSTERED (AUDIT_STATUS_ID)
);
INSERT INTO AUDIT_STATUS (AUDIT_STATUS_ID, NAME, DESCRIPTION) VALUES (1, 'ACTIVE', 'Active Audit');
INSERT INTO AUDIT_STATUS (AUDIT_STATUS_ID, NAME, DESCRIPTION) VALUES (2, 'APPROVED', 'Approved Audit');
INSERT INTO AUDIT_STATUS (AUDIT_STATUS_ID, NAME, DESCRIPTION) VALUES (3, 'REJECTED', 'Rejected Audit');

CREATE TABLE FILE_AUDIT (
    FILE_ID numeric(11, 0) NOT NULL,
    NAME varchar(100) NULL,
    DESCRIPTION varchar(255) NULL,
    CONTENT image NOT NULL,
    DOCUMENT_ID numeric(11,0) NULL,
    AUDIT_STATUS_ID INT NOT NULL DEFAULT 1,
    CREATED_BY numeric(11,0),
    CREATED_DATE datetime NOT NULL DEFAULT getDate(),
    UPDATED_BY numeric(11,0),
    UPDATED_DATE datetime,
    LOCK_VERSION numeric(11, 0) NOT NULL DEFAULT 0,
    CONSTRAINT FILE_AUDIT_PK PRIMARY KEY CLUSTERED (FILE_ID)
);
ALTER TABLE FILE_AUDIT ADD CONSTRAINT FILE_AUDIT_FK1 FOREIGN KEY (FILE_ID) REFERENCES FILES (FILE_ID);
ALTER TABLE FILE_AUDIT ADD CONSTRAINT FILE_AUDIT_FK2 FOREIGN KEY (AUDIT_STATUS_ID) REFERENCES AUDIT_STATUS (AUDIT_STATUS_ID);
ALTER TABLE FILE_AUDIT ADD CONSTRAINT FILE_AUDIT_FK3 FOREIGN KEY (DOCUMENT_ID) REFERENCES DOCUMENT (DOCUMENT_ID);

INSERT INTO SYSTEM_FUNCTION (SYSTEM_FUNCTION_ID, MODULE, NAME, DESCRIPTION) VALUES (1150, '/file', '/fileAudit', 'File Audit Details');
INSERT INTO SYSTEM_ACCESS (SECURITY_GROUP_ID, SYSTEM_FUNCTION_ID) VALUES (2, 1150);
INSERT INTO SYSTEM_FUNCTION (SYSTEM_FUNCTION_ID, MODULE, NAME, DESCRIPTION) VALUES (1151, '/file', '/mailIn', 'Bulk Mail In');
INSERT INTO SYSTEM_ACCESS (SECURITY_GROUP_ID, SYSTEM_FUNCTION_ID) VALUES (2, 1151);

CREATE TABLE REVINFO (
    REV_ID        numeric(11,0) IDENTITY NOT NULL,
    REV_TSTMP     bigint                 NOT NULL,
    CONSTRAINT REVINFO_PK PRIMARY KEY CLUSTERED (REV_ID)
);

CREATE TABLE FILE_AUDIT_AUD (
	FILE_ID numeric(11, 0) NOT NULL,
	NAME varchar(100) NULL,
	DESCRIPTION varchar(255) NULL,
	CONTENT image NULL,
	AUDIT_STATUS_ID int NULL,
	CREATED_BY numeric(11, 0) NULL,
	CREATED_DATE datetime NULL,
	UPDATED_BY numeric(11, 0) NULL,
	UPDATED_DATE datetime NULL,
	LOCK_VERSION numeric(11, 0) NULL,
	DOCUMENT_ID numeric(11, 0) NULL,
    REV_ID numeric(11,0) NOT NULL,
    REV_TYPE tinyint NOT NULL,
    CONSTRAINT FILE_AUDIT_AUD_PK PRIMARY KEY CLUSTERED (FILE_ID, REV_ID)
);

ALTER TABLE OWNER ADD OWNER_OCCUPIED char(1) NOT NULL DEFAULT 'N';
ALTER TABLE OWNER ADD MANAGEMENT varchar(50) NULL;

UPDATE BUILDING_CONTACT SET BUILDING_CONTACT_TYPE_ID = 1 WHERE BUILDING_CONTACT_TYPE_ID = 2;
DELETE FROM BUILDING_CONTACT WHERE BUILDING_CONTACT_TYPE_ID = 3;

-- 7
INSERT INTO TEMPLATE_TYPE (NAME) VALUES ('Pdf Form');

ALTER TABLE TEMPLATE ADD CONFIG_DOCUMENT_ID numeric(11, 0) NULL;
ALTER TABLE TEMPLATE ADD CONSTRAINT TEMPLATE_FK2 FOREIGN KEY(CONFIG_DOCUMENT_ID) REFERENCES DOCUMENT(DOCUMENT_ID);

ALTER TABLE ACTION_CODE ADD DOCUMENT_TEMPLATE_ID numeric(11, 0) NULL;
ALTER TABLE ACTION_CODE ADD CONSTRAINT ACTION_CODE_FK6 FOREIGN KEY(DOCUMENT_TEMPLATE_ID) REFERENCES TEMPLATE(TEMPLATE_ID);

ALTER TABLE FILE_ACTION ADD ATTACHMENT_ID numeric(11, 0) NULL;
ALTER TABLE FILE_ACTION ADD CONSTRAINT FILE_ACTION_FK9 FOREIGN KEY(ATTACHMENT_ID) REFERENCES DOCUMENT(DOCUMENT_ID);

ALTER TABLE JOB_ACTION ADD ATTACHMENT_ID numeric(11, 0) NULL;
ALTER TABLE JOB_ACTION ADD CONSTRAINT JOB_ACTION_FK9 FOREIGN KEY(ATTACHMENT_ID) REFERENCES DOCUMENT(DOCUMENT_ID);

INSERT INTO SYSTEM_FUNCTION (SYSTEM_FUNCTION_ID, MODULE, NAME, DESCRIPTION) VALUES (339, '/setup', '/downloadDocument', 'Download Document');

CREATE TABLE MAIL_BATCH_STATUS (
    MAIL_BATCH_STATUS_ID INT NOT NULL,
    NAME varchar(100) NOT NULL,
    DESCRIPTION varchar(255) NULL,
    CREATED_BY numeric(11,0),
    CREATED_DATE datetime NOT NULL DEFAULT getDate(),
    UPDATED_BY numeric(11,0),
    UPDATED_DATE datetime,
    LOCK_VERSION numeric(11, 0) NOT NULL DEFAULT 0,
    CONSTRAINT MAIL_BATCH_STATUS_PK PRIMARY KEY CLUSTERED (MAIL_BATCH_STATUS_ID)
);
INSERT INTO MAIL_BATCH_STATUS (MAIL_BATCH_STATUS_ID, NAME, DESCRIPTION) VALUES (1, 'SENT', 'Sent');
INSERT INTO MAIL_BATCH_STATUS (MAIL_BATCH_STATUS_ID, NAME, DESCRIPTION) VALUES (2, 'RECEIVED', 'Received');
INSERT INTO MAIL_BATCH_STATUS (MAIL_BATCH_STATUS_ID, NAME, DESCRIPTION) VALUES (3, 'REJECTED', 'Rejected');

CREATE TABLE MAIL_BATCH (
    MAIL_BATCH_ID numeric(11, 0) IDENTITY(10001,1) NOT NULL,
    NAME varchar(50) NOT NULL,
    DESCRIPTION varchar(250) NULL,
    CREATED_BY numeric(11,0),
    CREATED_DATE datetime NOT NULL DEFAULT getDate(),
    UPDATED_BY numeric(11,0),
    UPDATED_DATE datetime,
    LOCK_VERSION numeric(11, 0) NOT NULL DEFAULT 0,
    CONSTRAINT MAIL_BATCH_PK PRIMARY KEY CLUSTERED (MAIL_BATCH_ID)
);
ALTER TABLE MAIL_BATCH ADD CONSTRAINT MAIL_BATCH_UK1 UNIQUE (NAME);

CREATE TABLE MAIL_BATCH_FILE (
    MAIL_BATCH_FILE_ID numeric(11, 0) IDENTITY NOT NULL,
    MAIL_BATCH_ID numeric(11, 0) NOT NULL,
	FILE_ID numeric(11, 0) NOT NULL,
    FILE_ACTION_ID numeric(11,0) NULL,
    JOB_ACTION_ID numeric(11,0) NULL,
    STATUS_ID INT NULL,
    SENT_DATE datetime NULL,
    RECEIVED_DATE datetime NULL,
    REJECTED_DATE datetime NULL,
    CREATED_BY numeric(11,0),
    CREATED_DATE datetime NOT NULL DEFAULT getDate(),
    UPDATED_BY numeric(11,0),
    UPDATED_DATE datetime,
    LOCK_VERSION numeric(11, 0) NOT NULL DEFAULT 0,
    CONSTRAINT MAIL_BATCH_FILE_PK PRIMARY KEY CLUSTERED (MAIL_BATCH_FILE_ID)
);
ALTER TABLE MAIL_BATCH_FILE ADD CONSTRAINT MAIL_BATCH_FILE_FK1 FOREIGN KEY (MAIL_BATCH_ID) REFERENCES MAIL_BATCH (MAIL_BATCH_ID);
ALTER TABLE MAIL_BATCH_FILE ADD CONSTRAINT MAIL_BATCH_FILE_FK2 FOREIGN KEY (FILE_ID) REFERENCES FILES (FILE_ID);
ALTER TABLE MAIL_BATCH_FILE ADD CONSTRAINT MAIL_BATCH_FILE_FK3 FOREIGN KEY (FILE_ACTION_ID) REFERENCES FILE_ACTION (FILE_ACTION_ID);
ALTER TABLE MAIL_BATCH_FILE ADD CONSTRAINT MAIL_BATCH_FILE_FK4 FOREIGN KEY (JOB_ACTION_ID) REFERENCES JOB_ACTION (JOB_ACTION_ID);
ALTER TABLE MAIL_BATCH_FILE ADD CONSTRAINT MAIL_BATCH_FILE_FK5 FOREIGN KEY (STATUS_ID) REFERENCES MAIL_BATCH_STATUS (MAIL_BATCH_STATUS_ID);
ALTER TABLE MAIL_BATCH_FILE ADD CONSTRAINT MAIL_BATCH_FILE_UK1 UNIQUE (MAIL_BATCH_ID, FILE_ID);

-- ALTER TABLE MAIL_BATCH_FILE ADD STATUS_ID INT NULL;
-- ALTER TABLE MAIL_BATCH_FILE ADD CONSTRAINT MAIL_BATCH_FILE_FK5 FOREIGN KEY (STATUS_ID) REFERENCES MAIL_BATCH_STATUS (MAIL_BATCH_STATUS_ID);
-- ALTER TABLE MAIL_BATCH_FILE ADD SENT_DATE datetime NULL;
-- ALTER TABLE MAIL_BATCH_FILE ADD RECEIVED_DATE datetime NULL;
-- ALTER TABLE MAIL_BATCH_FILE ADD REJECTED_DATE datetime NULL;

SET IDENTITY_INSERT USER_TYPE ON;
INSERT INTO USER_TYPE (USER_TYPE_ID, NAME) VALUES (0, 'System');
SET IDENTITY_INSERT USER_TYPE OFF;
ALTER TABLE USERS ALTER COLUMN [PASSWORD] varchar(50) NOT NULL;
ALTER TABLE USERS ALTER COLUMN PASSWORD_EXPIRE datetime NULL;

-- 
-- ScheduledTaskHistoryItem
-- DROP TABLE SCHEDULED_TASK_HISTORY_ITEM;
CREATE TABLE SCHEDULED_TASK_HISTORY_ITEM (
    SCHEDULED_TASK_HISTORY_ITEM_ID numeric(11, 0) IDENTITY NOT NULL,
    SCHEDULED_TASK_HISTORY_ID numeric(11, 0) NOT NULL,
    ITEM_ID varchar(50) NOT NULL,
    SENT_DATE datetime NULL,
    RECEIVED_DATE datetime NULL,
    ITEM_FROM varchar(250) NULL,
    CONSTRAINT SCHEDULED_TASK_HISTORY_ITEM_PK PRIMARY KEY CLUSTERED (SCHEDULED_TASK_HISTORY_ITEM_ID)
);
ALTER TABLE SCHEDULED_TASK_HISTORY_ITEM ADD CONSTRAINT SCHEDULED_TASK_HISTORY_ITEM_FK1 FOREIGN KEY (SCHEDULED_TASK_HISTORY_ID) REFERENCES SCHEDULED_TASK_HISTORY (SCHEDULED_TASK_HISTORY_ID);

INSERT INTO SYSTEM_FUNCTION (SYSTEM_FUNCTION_ID, MODULE, NAME, DESCRIPTION, LOGICAL)
 VALUES (1152, '/file', '/viewFcaDoc', 'View File FCA Documents', 'Y');

INSERT INTO OWNER_TYPE (OWNER_TYPE_ID, NAME) VALUES (5, 'Alternate');

INSERT INTO DBVERSION (DBVERSION, PREV_DBVERSION) VALUES ('JMS.01.47', 'JMS.01.46');