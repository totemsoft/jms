-- ASE Key Order
-- UI access
INSERT INTO SYSTEM_FUNCTION (SYSTEM_FUNCTION_ID, MODULE, NAME, DESCRIPTION) VALUES (1154, '/file', '/aseKeyOrder', 'ASE Key Order');
INSERT INTO SYSTEM_FUNCTION (SYSTEM_FUNCTION_ID, MODULE, NAME, QUERY, DESCRIPTION) VALUES (1155, '/file', '/aseKeyOrder', 'parameter=export', 'ASE Key Order Export');
INSERT INTO SYSTEM_FUNCTION (SYSTEM_FUNCTION_ID, MODULE, NAME, DESCRIPTION, LOGICAL) VALUES (1156, '/file', '/aseKeyOrderEdit', 'ASE Key Order Edit', 'Y');
INSERT INTO SYSTEM_FUNCTION (SYSTEM_FUNCTION_ID, MODULE, NAME, DESCRIPTION, LOGICAL) VALUES (1157, '/file', '/aseKeyEdit', 'ASE Key Edit', 'Y');

CREATE TABLE ASE_KEY_PRICE (
    ASE_KEY_PRICE_ID numeric(11, 0) NOT NULL,
    NAME varchar(50) NOT NULL,
    DESCRIPTION varchar(255) NULL,
    KEY_PRICE decimal(19, 2) NOT NULL,
    CREATED_BY numeric(11,0),
    CREATED_DATE datetime NOT NULL DEFAULT getDate(),
    UPDATED_BY numeric(11,0),
    UPDATED_DATE datetime,
    LOCK_VERSION numeric(11, 0) NOT NULL DEFAULT 0
);
ALTER TABLE ASE_KEY_PRICE ADD CONSTRAINT ASE_KEY_PRICE_PK PRIMARY KEY (ASE_KEY_PRICE_ID);

INSERT INTO ASE_KEY_PRICE (ASE_KEY_PRICE_ID, NAME, KEY_PRICE) VALUES (1, 'Standard Key', 99);
INSERT INTO ASE_KEY_PRICE (ASE_KEY_PRICE_ID, NAME, KEY_PRICE) VALUES (2, 'Special Key',  29);

INSERT INTO HIBERNATE_SEQUENCES (SEQUENCE_NAME, NEXT_VAL) VALUES ('ASE_KEY_ORDER', 10001);
  
-- ALTER TABLE ASE_KEY DROP CONSTRAINT ASE_KEY_FK6
-- DROP TABLE ASE_KEY_ORDER
CREATE TABLE ASE_KEY_ORDER (
    ASE_KEY_ORDER_ID numeric(11, 0) NOT NULL,
    ORDER_NO varchar(20) NULL,
    RECEIVED_DATE datetime NOT NULL,
	SUPPLIER_ID numeric(11, 0) NOT NULL,
	CONTACT_ID numeric(11, 0) NOT NULL,
	ADDRESS_ID numeric(11, 0) NOT NULL,
    SENT_METHOD_ID numeric(11),
    SENT_REFERENCE_NO varchar(20),
    PAYMENT_METHOD_ID numeric(11),
    KEY_PRICE decimal(19, 2) NOT NULL,
    POSTAGE_PRICE decimal(19, 2),
    COMMENT varchar(4098),
    CREATED_BY numeric(11,0),
    CREATED_DATE datetime NOT NULL DEFAULT getDate(),
    UPDATED_BY numeric(11,0),
    UPDATED_DATE datetime,
    LOCK_VERSION numeric(11, 0) NOT NULL DEFAULT 0
);
ALTER TABLE ASE_KEY_ORDER ADD CONSTRAINT ASE_KEY_ORDER_PK PRIMARY KEY (ASE_KEY_ORDER_ID);
ALTER TABLE ASE_KEY_ORDER ADD CONSTRAINT ASE_KEY_ORDER_FK1 FOREIGN KEY (SUPPLIER_ID) REFERENCES SUPPLIER (SUPPLIER_ID);
ALTER TABLE ASE_KEY_ORDER ADD CONSTRAINT ASE_KEY_ORDER_FK2 FOREIGN KEY (CONTACT_ID) REFERENCES CONTACT (CONTACT_ID);
ALTER TABLE ASE_KEY_ORDER ADD CONSTRAINT ASE_KEY_ORDER_FK3 FOREIGN KEY (ADDRESS_ID) REFERENCES ADDRESS (ADDRESS_ID);
ALTER TABLE ASE_KEY_ORDER ADD CONSTRAINT ASE_KEY_ORDER_FK4 FOREIGN KEY (SENT_METHOD_ID) REFERENCES SENT_METHOD (SENT_METHOD_ID);
ALTER TABLE ASE_KEY_ORDER ADD CONSTRAINT ASE_KEY_ORDER_FK5 FOREIGN KEY (PAYMENT_METHOD_ID) REFERENCES PAYMENT_METHOD (PAYMENT_METHOD_ID);

ALTER TABLE ASE_KEY ALTER COLUMN ASE_KEY_NO varchar(50) NULL;
ALTER TABLE ASE_KEY ADD LICENSE_NO varchar(50) NULL;
ALTER TABLE ASE_KEY ADD ASE_KEY_ORDER_ID numeric(11, 0);
ALTER TABLE ASE_KEY ADD CONSTRAINT ASE_KEY_FK6 FOREIGN KEY (ASE_KEY_ORDER_ID) REFERENCES ASE_KEY_ORDER (ASE_KEY_ORDER_ID);
ALTER TABLE ASE_KEY ADD CONTACT_ID numeric(11, 0);
ALTER TABLE ASE_KEY ADD CONSTRAINT ASE_KEY_FK7 FOREIGN KEY (CONTACT_ID) REFERENCES CONTACT (CONTACT_ID);
ALTER TABLE ASE_KEY ADD STATUS_ID numeric(11, 0); -- AseKeyStatusEnum

ALTER TABLE SUPPLIER_TYPE ADD CHARGEABLE char(1) NOT NULL DEFAULT 'Y';

--
-- this should be the last statement in any update script
--
INSERT INTO DBVERSION (DBVERSION, PREV_DBVERSION) VALUES ('JMS.01.49', 'JMS.01.48');