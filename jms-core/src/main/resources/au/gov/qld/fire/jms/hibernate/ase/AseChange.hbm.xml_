<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd" >
    
<hibernate-mapping>
<class 
    name="au.gov.qld.fire.jms.domain.ase.AseChange" 
    table="ASE_CHANGE"
    dynamic-update="true" optimistic-lock="version" lazy="false"
>

    <id
        name="id"
        type="java.lang.Long"
        column="ASE_CHANGE_ID"
    >
        <generator class="identity" />
    </id>

    <version
        name="lockVersion"
        type="long"
        column="LOCK_VERSION"
    />

    <property
        name="dateChange"
        type="timestamp"
        column="DATE_CHANGE"
        not-null="true"
        length="23"
    />
    <property
        name="createdDate"
        type="timestamp"
        column="CREATED_DATE"
        not-null="true"
        update="false"
        length="23"
    />
    <property
        name="updatedDate"
        type="timestamp"
        column="UPDATED_DATE"
        insert="false"
        length="23"
    />

    <!-- Associations -->
  
    <!-- bi-directional many-to-one association to User -->
    <many-to-one
        name="createdBy"
        class="au.gov.qld.fire.domain.security.User"
        update="false"
    >
        <column name="CREATED_BY" />
    </many-to-one>
    <!-- bi-directional many-to-one association to User -->
    <many-to-one
        name="updatedBy"
        class="au.gov.qld.fire.domain.security.User"
        insert="false"
    >
        <column name="UPDATED_BY" />
    </many-to-one>

    <!-- bi-directional one-to-many association to AseChangeSupplier -->
    <bag
        name="aseChangeSuppliers"
        lazy="true"
        inverse="true"
        cascade="save-update"
        where="LOGICALLY_DELETED IS NULL"
    >
        <key column="ASE_CHANGE_ID" />
        <one-to-many
            class="au.gov.qld.fire.jms.domain.ase.AseChangeSupplier"
        />
    </bag>
    <!-- bi-directional many-to-one association to AseFile -->
    <many-to-one
        name="aseFile"
        class="au.gov.qld.fire.jms.domain.ase.AseFile"
        not-null="true"
    >
        <column name="ASE_FILE_ID" />
    </many-to-one>

</class>

    <query name="aseChange.findByAseFile">
        <![CDATA[
            FROM AseChange WHERE aseFile = :aseFile
        ]]>
    </query>
    <query name="aseChange.findByDateChange">
        <![CDATA[
            FROM AseChange
            WHERE (aseFile.file.fileStatus.id = :fileStatusId)
                AND (dateChange IS NOT NULL)
                AND (dateChange >= :dateStart)
                AND (dateChange < :dateEnd)
                AND (:fileNo IS NULL OR aseFile.file.id LIKE :fileNo)
        ]]>
    </query>

</hibernate-mapping>